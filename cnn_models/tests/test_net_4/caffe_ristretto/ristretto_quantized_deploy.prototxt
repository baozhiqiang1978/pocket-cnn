layer {
  name: "data"
  type: "Input"
  top: "data"
  input_param {
    shape {
      dim: 1
      dim: 1
      dim: 18
      dim: 36
    }
  }
}
layer {
  name: "scale"
  type: "Power"
  bottom: "data"
  top: "scaled"
  power_param {
    scale: 0.015625
  }
}
layer {
  name: "conv1"
  type: "ConvolutionRistretto"
  bottom: "scaled"
  top: "conv1"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  convolution_param {
    num_output: 8
    kernel_size: 2
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
  quantization_param {
    bw_layer_in: 8
    bw_layer_out: 8
    bw_params: 8
    fl_layer_in: 4
    fl_layer_out: 4
    fl_params: 5
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "ConvolutionRistretto"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  convolution_param {
    num_output: 16
    kernel_size: 2
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
  quantization_param {
    bw_layer_in: 8
    bw_layer_out: 8
    bw_params: 8
    fl_layer_in: 4
    fl_layer_out: 4
    fl_params: 5
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 1
  }
}
layer {
  name: "conv3"
  type: "ConvolutionRistretto"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
  quantization_param {
    bw_layer_in: 8
    bw_layer_out: 8
    bw_params: 8
    fl_layer_in: 4
    fl_layer_out: 4
    fl_params: 5
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 3
  }
}
layer {
  name: "conv4"
  type: "ConvolutionRistretto"
  bottom: "pool3"
  top: "conv4"
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      mean: 0.0
      std: 0.01
    }
  }
  quantization_param {
    bw_layer_in: 8
    bw_layer_out: 8
    bw_params: 8
    fl_layer_in: 4
    fl_layer_out: 4
    fl_params: 5
  }
}
layer {
  name: "relu4"
  type: "Python"
  bottom: "conv4"
  top: "conv4"
  relu_param {
    negative_slope: 0.125
  }
  python_param {
    module: "cnn_caffe.custom_layers"
    layer: "QuantizedRelu"
    param_str: "{\'negative_slope\': 0.125000, \'bw_layer\': 8, \'fl_layer\': 4}"
  }
}
layer {
  name: "conv5"
  type: "ConvolutionRistretto"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 2
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      mean: 0.0
      std: 0.01
    }
  }
  quantization_param {
    bw_layer_in: 8
    bw_layer_out: 8
    bw_params: 8
    fl_layer_in: 4
    fl_layer_out: 2
    fl_params: 5
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Python"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
  python_param {
    module: "cnn_caffe.custom_layers"
    layer: "QuantizedAveragePooling"
    param_str: "{\'bw_layer\': 8, \'fl_layer\': 2}"
  }
}
layer {
  name: "softmax"
  type: "Softmax"
  bottom: "pool5"
  top: "softmax"
}
